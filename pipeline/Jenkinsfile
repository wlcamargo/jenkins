pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/wlcamargo/jenkins.git'
        BRANCH_DEV = 'dev'
        BRANCH_MAIN = 'main'
        PR_TITLE = 'Automated Pull Request from dev to main'
        PR_BODY = 'This pull request was automatically created by Jenkins.'
    }

    stages {
        stage('Install and Setup') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install pytest selenium webdriver-manager psycopg2-binary
                '''
            }
        }

        stage('Checkout Dev') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: "${BRANCH_DEV}"]], userRemoteConfigs: [[url: "${REPO_URL}"]]])
            }
        }

        stage('Build') {
            steps {
                sh '''
                    . venv/bin/activate
                    python3 test/test_online_services.py
                '''
            }
        }

        stage('Test') {
            steps {
                sh '''
                    # Check if the virtual environment is activated
                    if [ -f venv/bin/activate ]; then
                        . venv/bin/activate
                    fi

                    # List installed packages for debugging
                    pip list

                    # Check important files and directories
                    ls -l

                    # Run pytest with more details
                    pytest --maxfail=1 --disable-warnings --tb=short
                '''
            }
        }

        stage('Create Pull Request') {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'GITHUB_TOKEN', variable: 'GITHUB_TOKEN'),
                        string(credentialsId: 'REPO_OWNER', variable: 'REPO_OWNER'),
                        string(credentialsId: 'REPO_NAME', variable: 'REPO_NAME')
                    ]) {
                        def response = sh(script: """
                            curl -X POST -H "Authorization: token ${GITHUB_TOKEN}" \
                            -H "Accept: application/vnd.github.v3+json" \
                            -H "Content-Type: application/json" \
                            -d '{ "title": "${PR_TITLE}", "body": "${PR_BODY}", "head": "${BRANCH_DEV}", "base": "${BRANCH_MAIN}" }' \
                            https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/pulls
                        """, returnStdout: true).trim()

                        echo "Pull Request Response: ${response}"
                    }
                }
            }
        }
    }

    post {
        always {
            sh '''
                # Try to deactivate the virtual environment if it is activated
                if [ -f venv/bin/activate ]; then
                    . venv/bin/activate
                    deactivate || true
                fi
            '''
        }
    }
}
